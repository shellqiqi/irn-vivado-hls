This folder contains two traces. These traces are generated by running an incast experiment in the OMNET++/INET simulator extension for IRN, and collecting relevant inputs and outputs of the events triggered at the receiver node.

recvInput-40Gbps-incast.txt:  
This is the input trace. The value in the first line corresponds to the total number of lines in the file. Each subsequent line indicates a data packet arriving for a particular QP (or flow). 
1. The first value in each line corresponds to the QID (QP identifier).
2. The second value corresponds to the opcode (as per the RDMA specification). For this trace, it is simply set to the opcode cor/responding to RDMA Send "middle" packets for all packets, since the OMNET++ simulator models only the basic transport logic of RDMA and does not model specific RDMA operations (although the HLS code has been tested against input traces with other RDMA opcodes to validate its correctness for the functionality specific to them).
3. The third value corresponds to the sequence number in the packet.
This file is read by the testbench (receiveData_tb.cpp) line by line. The receiveData module is then invoked, with the relevant QP context and the read metadata passed as arguments. One can refer to the testbench code to get a better sense of how this file is used.

recvOutput-40Gbps-incast.txt:
This is the output trace. There are six values in each line that indicate the fields in the acknowledgement triggered after processing the data, and the updated QP context. These values are the ack syndrome, the next expected sequence number, the selective acknowledgement number, the current message sequence number and the number of CQEs generated. This is the gold-standard against which a similar output generated by the receiveData testbench is compared.
